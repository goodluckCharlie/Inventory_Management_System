<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rightPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>