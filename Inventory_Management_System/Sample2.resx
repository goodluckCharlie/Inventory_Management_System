<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>